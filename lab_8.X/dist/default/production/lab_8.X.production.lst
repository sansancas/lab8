

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Apr 20 12:43:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0019                     _TXREG	set	25
   209     001E                     _ADRESH	set	30
   210     001A                     _RCREG	set	26
   211     001F                     _ADCON0bits	set	31
   212     000C                     _PIR1bits	set	12
   213     0018                     _RCSTAbits	set	24
   214     0006                     _PORTB	set	6
   215     0005                     _PORTA	set	5
   216     008C                     _PIE1bits	set	140
   217     009F                     _ADCON1bits	set	159
   218     009A                     _SPBRGH	set	154
   219     0099                     _SPBRG	set	153
   220     0098                     _TXSTAbits	set	152
   221     008F                     _OSCCONbits	set	143
   222     0086                     _TRISB	set	134
   223     0085                     _TRISA	set	133
   224     0187                     _BAUDCTLbits	set	391
   225     0189                     _ANSELH	set	393
   226     0188                     _ANSEL	set	392
   227                           
   228                           	psect	strings
   229     0003                     __pstrings:
   230     0003                     stringtab:
   231     0003                     __stringtab:
   232                           
   233                           ;	String table - string pointers are 2 bytes each
   234     0003  1BFF               	btfsc	btemp+1,7
   235     0004  280D               	ljmp	stringcode
   236     0005  1383               	bcf	3,7
   237     0006  187F               	btfsc	btemp+1,0
   238     0007  1783               	bsf	3,7
   239     0008  0800               	movf	0,w
   240     0009  0A84               	incf	4,f
   241     000A  1903               	skipnz
   242     000B  0AFF               	incf	btemp+1,f
   243     000C  0008               	return
   244     000D                     stringcode:
   245     000D  087F               	movf	btemp+1,w
   246     000E  397F               	andlw	127
   247     000F  008A               	movwf	10
   248     0010  0804               	movf	4,w
   249     0011  0A84               	incf	4,f
   250     0012  1903               	skipnz
   251     0013  0AFF               	incf	btemp+1,f
   252     0014  0082               	movwf	2
   253     0015                     __stringbase:
   254     0015                     __end_of__stringtab:
   255                           
   256                           	psect	stringtext
   257     0800                     __pstringtext:
   258     0800                     STR_6:
   259     0800  3420               	retlw	32	;' '
   260     0801  3449               	retlw	73	;'I'
   261     0802  346E               	retlw	110	;'n'
   262     0803  3467               	retlw	103	;'g'
   263     0804  3472               	retlw	114	;'r'
   264     0805  3465               	retlw	101	;'e'
   265     0806  3473               	retlw	115	;'s'
   266     0807  3465               	retlw	101	;'e'
   267     0808  3420               	retlw	32	;' '
   268     0809  3476               	retlw	118	;'v'
   269     080A  3461               	retlw	97	;'a'
   270     080B  346C               	retlw	108	;'l'
   271     080C  346F               	retlw	111	;'o'
   272     080D  3472               	retlw	114	;'r'
   273     080E  3420               	retlw	32	;' '
   274     080F  3464               	retlw	100	;'d'
   275     0810  3465               	retlw	101	;'e'
   276     0811  3473               	retlw	115	;'s'
   277     0812  3465               	retlw	101	;'e'
   278     0813  3461               	retlw	97	;'a'
   279     0814  3420               	retlw	32	;' '
   280     0815  346D               	retlw	109	;'m'
   281     0816  346F               	retlw	111	;'o'
   282     0817  3473               	retlw	115	;'s'
   283     0818  3474               	retlw	116	;'t'
   284     0819  3472               	retlw	114	;'r'
   285     081A  3461               	retlw	97	;'a'
   286     081B  3472               	retlw	114	;'r'
   287     081C  343A               	retlw	58	;':'
   288     081D  3420               	retlw	32	;' '
   289     081E  340D               	retlw	13
   290     081F  3400               	retlw	0
   291     0820                     STR_1:
   292     0820  340D               	retlw	13
   293     0821  3420               	retlw	32	;' '
   294     0822  3451               	retlw	81	;'Q'
   295     0823  3475               	retlw	117	;'u'
   296     0824  3465               	retlw	101	;'e'
   297     0825  3420               	retlw	32	;' '
   298     0826  3461               	retlw	97	;'a'
   299     0827  3463               	retlw	99	;'c'
   300     0828  3463               	retlw	99	;'c'
   301     0829  3469               	retlw	105	;'i'
   302     082A  346F               	retlw	111	;'o'
   303     082B  346E               	retlw	110	;'n'
   304     082C  3420               	retlw	32	;' '
   305     082D  3464               	retlw	100	;'d'
   306     082E  3465               	retlw	101	;'e'
   307     082F  3473               	retlw	115	;'s'
   308     0830  3465               	retlw	101	;'e'
   309     0831  3461               	retlw	97	;'a'
   310     0832  3420               	retlw	32	;' '
   311     0833  3472               	retlw	114	;'r'
   312     0834  3465               	retlw	101	;'e'
   313     0835  3461               	retlw	97	;'a'
   314     0836  346C               	retlw	108	;'l'
   315     0837  3469               	retlw	105	;'i'
   316     0838  347A               	retlw	122	;'z'
   317     0839  3461               	retlw	97	;'a'
   318     083A  3472               	retlw	114	;'r'
   319     083B  343A               	retlw	58	;':'
   320     083C  3420               	retlw	32	;' '
   321     083D  340D               	retlw	13
   322     083E  3400               	retlw	0
   323     083F                     STR_17:
   324     083F  340D               	retlw	13
   325     0840  3420               	retlw	32	;' '
   326     0841  3445               	retlw	69	;'E'
   327     0842  346C               	retlw	108	;'l'
   328     0843  3420               	retlw	32	;' '
   329     0844  3476               	retlw	118	;'v'
   330     0845  3461               	retlw	97	;'a'
   331     0846  346C               	retlw	108	;'l'
   332     0847  346F               	retlw	111	;'o'
   333     0848  3472               	retlw	114	;'r'
   334     0849  3420               	retlw	32	;' '
   335     084A  3473               	retlw	115	;'s'
   336     084B  3465               	retlw	101	;'e'
   337     084C  3420               	retlw	32	;' '
   338     084D  3468               	retlw	104	;'h'
   339     084E  3461               	retlw	97	;'a'
   340     084F  3420               	retlw	32	;' '
   341     0850  346D               	retlw	109	;'m'
   342     0851  346F               	retlw	111	;'o'
   343     0852  3473               	retlw	115	;'s'
   344     0853  3474               	retlw	116	;'t'
   345     0854  3472               	retlw	114	;'r'
   346     0855  3461               	retlw	97	;'a'
   347     0856  3464               	retlw	100	;'d'
   348     0857  346F               	retlw	111	;'o'
   349     0858  3420               	retlw	32	;' '
   350     0859  340D               	retlw	13
   351     085A  3400               	retlw	0
   352     085B                     STR_5:
   353     085B  3420               	retlw	32	;' '
   354     085C  3434               	retlw	52	;'4'
   355     085D  3429               	retlw	41	;')'
   356     085E  3420               	retlw	32	;' '
   357     085F  344D               	retlw	77	;'M'
   358     0860  346F               	retlw	111	;'o'
   359     0861  3473               	retlw	115	;'s'
   360     0862  3474               	retlw	116	;'t'
   361     0863  3472               	retlw	114	;'r'
   362     0864  3461               	retlw	97	;'a'
   363     0865  3472               	retlw	114	;'r'
   364     0866  3420               	retlw	32	;' '
   365     0867  3470               	retlw	112	;'p'
   366     0868  346F               	retlw	111	;'o'
   367     0869  3474               	retlw	116	;'t'
   368     086A  3465               	retlw	101	;'e'
   369     086B  346E               	retlw	110	;'n'
   370     086C  3463               	retlw	99	;'c'
   371     086D  3469               	retlw	105	;'i'
   372     086E  346F               	retlw	111	;'o'
   373     086F  346D               	retlw	109	;'m'
   374     0870  3465               	retlw	101	;'e'
   375     0871  3474               	retlw	116	;'t'
   376     0872  3472               	retlw	114	;'r'
   377     0873  346F               	retlw	111	;'o'
   378     0874  3420               	retlw	32	;' '
   379     0875  340D               	retlw	13
   380     0876  3400               	retlw	0
   381     0877                     STR_2:
   382     0877  3420               	retlw	32	;' '
   383     0878  3431               	retlw	49	;'1'
   384     0879  3429               	retlw	41	;')'
   385     087A  3420               	retlw	32	;' '
   386     087B  3444               	retlw	68	;'D'
   387     087C  3465               	retlw	101	;'e'
   388     087D  3473               	retlw	115	;'s'
   389     087E  3470               	retlw	112	;'p'
   390     087F  346C               	retlw	108	;'l'
   391     0880  3465               	retlw	101	;'e'
   392     0881  3467               	retlw	103	;'g'
   393     0882  3461               	retlw	97	;'a'
   394     0883  3472               	retlw	114	;'r'
   395     0884  3420               	retlw	32	;' '
   396     0885  3463               	retlw	99	;'c'
   397     0886  3461               	retlw	97	;'a'
   398     0887  3472               	retlw	114	;'r'
   399     0888  3461               	retlw	97	;'a'
   400     0889  3463               	retlw	99	;'c'
   401     088A  3474               	retlw	116	;'t'
   402     088B  3465               	retlw	101	;'e'
   403     088C  3472               	retlw	114	;'r'
   404     088D  3420               	retlw	32	;' '
   405     088E  340D               	retlw	13
   406     088F  3400               	retlw	0
   407     0890                     STR_4:
   408     0890  3420               	retlw	32	;' '
   409     0891  3433               	retlw	51	;'3'
   410     0892  3429               	retlw	41	;')'
   411     0893  3420               	retlw	32	;' '
   412     0894  344D               	retlw	77	;'M'
   413     0895  346F               	retlw	111	;'o'
   414     0896  3473               	retlw	115	;'s'
   415     0897  3474               	retlw	116	;'t'
   416     0898  3472               	retlw	114	;'r'
   417     0899  3461               	retlw	97	;'a'
   418     089A  3472               	retlw	114	;'r'
   419     089B  3420               	retlw	32	;' '
   420     089C  3463               	retlw	99	;'c'
   421     089D  3461               	retlw	97	;'a'
   422     089E  3464               	retlw	100	;'d'
   423     089F  3465               	retlw	101	;'e'
   424     08A0  346E               	retlw	110	;'n'
   425     08A1  3461               	retlw	97	;'a'
   426     08A2  3420               	retlw	32	;' '
   427     08A3  340D               	retlw	13
   428     08A4  3400               	retlw	0
   429     08A5                     STR_3:
   430     08A5  3420               	retlw	32	;' '
   431     08A6  3432               	retlw	50	;'2'
   432     08A7  3429               	retlw	41	;')'
   433     08A8  3420               	retlw	32	;' '
   434     08A9  3445               	retlw	69	;'E'
   435     08AA  346E               	retlw	110	;'n'
   436     08AB  3476               	retlw	118	;'v'
   437     08AC  3469               	retlw	105	;'i'
   438     08AD  3461               	retlw	97	;'a'
   439     08AE  3472               	retlw	114	;'r'
   440     08AF  3420               	retlw	32	;' '
   441     08B0  3441               	retlw	65	;'A'
   442     08B1  3473               	retlw	115	;'s'
   443     08B2  3463               	retlw	99	;'c'
   444     08B3  3469               	retlw	105	;'i'
   445     08B4  3469               	retlw	105	;'i'
   446     08B5  3420               	retlw	32	;' '
   447     08B6  340D               	retlw	13
   448     08B7  3400               	retlw	0
   449     08B8                     STR_16:
   450     08B8  3420               	retlw	32	;' '
   451     08B9  3445               	retlw	69	;'E'
   452     08BA  346E               	retlw	110	;'n'
   453     08BB  3476               	retlw	118	;'v'
   454     08BC  3469               	retlw	105	;'i'
   455     08BD  3461               	retlw	97	;'a'
   456     08BE  3472               	retlw	114	;'r'
   457     08BF  3420               	retlw	32	;' '
   458     08C0  3441               	retlw	65	;'A'
   459     08C1  3473               	retlw	115	;'s'
   460     08C2  3463               	retlw	99	;'c'
   461     08C3  3469               	retlw	105	;'i'
   462     08C4  3469               	retlw	105	;'i'
   463     08C5  343A               	retlw	58	;':'
   464     08C6  3420               	retlw	32	;' '
   465     08C7  3400               	retlw	0
   466     08C8                     STR_18:
   467     08C8  340D               	retlw	13
   468     08C9  3420               	retlw	32	;' '
   469     08CA  3448               	retlw	72	;'H'
   470     08CB  346F               	retlw	111	;'o'
   471     08CC  346C               	retlw	108	;'l'
   472     08CD  3461               	retlw	97	;'a'
   473     08CE  3420               	retlw	32	;' '
   474     08CF  340D               	retlw	13
   475     08D0  3400               	retlw	0
   476     08D1                     STR_19:
   477     08D1  3465               	retlw	101	;'e'
   478     08D2  3472               	retlw	114	;'r'
   479     08D3  3472               	retlw	114	;'r'
   480     08D4  346F               	retlw	111	;'o'
   481     08D5  3472               	retlw	114	;'r'
   482     08D6  3420               	retlw	32	;' '
   483     08D7  340D               	retlw	13
   484     08D8  3400               	retlw	0
   485     08D9                     STR_8:
   486     08D9  340D               	retlw	13
   487     08DA  3432               	retlw	50	;'2'
   488     08DB  3400               	retlw	0
   489     08DC                     STR_9:
   490     08DC  340D               	retlw	13
   491     08DD  3433               	retlw	51	;'3'
   492     08DE  3400               	retlw	0
   493     08DF                     STR_10:
   494     08DF  340D               	retlw	13
   495     08E0  3434               	retlw	52	;'4'
   496     08E1  3400               	retlw	0
   497     08E2                     STR_11:
   498     08E2  340D               	retlw	13
   499     08E3  3435               	retlw	53	;'5'
   500     08E4  3400               	retlw	0
   501     08E5                     STR_12:
   502     08E5  340D               	retlw	13
   503     08E6  3436               	retlw	54	;'6'
   504     08E7  3400               	retlw	0
   505     08E8                     STR_13:
   506     08E8  340D               	retlw	13
   507     08E9  3437               	retlw	55	;'7'
   508     08EA  3400               	retlw	0
   509     08EB                     STR_14:
   510     08EB  340D               	retlw	13
   511     08EC  3438               	retlw	56	;'8'
   512     08ED  3400               	retlw	0
   513     08EE                     STR_15:
   514     08EE  340D               	retlw	13
   515     08EF  3439               	retlw	57	;'9'
   516     08F0  3400               	retlw	0
   517     08F1                     STR_7:
   518     08F1  340D               	retlw	13
   519     08F2  3461               	retlw	97	;'a'
   520     08F3  3400               	retlw	0
   521                           
   522                           	psect	cinit
   523     07FA                     start_initialization:	
   524                           ; #config settings
   525                           
   526     07FA                     __initialization:
   527                           
   528                           ; Clear objects allocated to COMMON
   529     07FA  01F5               	clrf	__pbssCOMMON& (0+127)
   530     07FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   531     07FC                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534     07FC                     __end_of__initialization:
   535     07FC  0183               	clrf	3
   536     07FD  120A  118A  2ED8   	ljmp	_main	;jump to C main() function
   537                           
   538                           	psect	bssCOMMON
   539     0075                     __pbssCOMMON:
   540     0075                     _pot:
   541     0075                     	ds	1
   542     0076                     _valor:
   543     0076                     	ds	1
   544                           
   545                           	psect	cstackCOMMON
   546     0070                     __pcstackCOMMON:
   547     0070                     ?_setup:
   548     0070                     ??_setup:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_main:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_texto:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ??_texto:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     texto@data:	
   561                           ; 1 bytes @ 0x0
   562                           
   563                           
   564                           ; 1 bytes @ 0x0
   565     0070                     	ds	1
   566     0071                     ?_cadena:
   567     0071                     cadena@str:	
   568                           ; 1 bytes @ 0x1
   569                           
   570                           
   571                           ; 2 bytes @ 0x1
   572     0071                     	ds	2
   573     0073                     ??_cadena:
   574     0073                     ??_main:	
   575                           ; 1 bytes @ 0x3
   576                           
   577                           
   578                           ; 1 bytes @ 0x3
   579     0073                     	ds	2
   580                           
   581                           	psect	maintext
   582     06D8                     __pmaintext:	
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 65 in file "main.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : B00/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0
   604 ;;      Temps:          2       0       0       0       0
   605 ;;      Totals:         2       0       0       0       0
   606 ;;Total ram usage:        2 bytes
   607 ;; Hardware stack levels required when called: 2
   608 ;; This function calls:
   609 ;;		_cadena
   610 ;;		_setup
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616     06D8                     _main:	
   617                           ;psect for function _main
   618                           
   619     06D8                     l855:	
   620                           ;incstack = 0
   621                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   622                           
   623                           
   624                           ;main.c: 66:     setup();
   625     06D8  120A  118A  26A6  120A  118A  	fcall	_setup
   626     06DD                     l857:
   627                           
   628                           ;main.c: 68:         cadena("\r Que accion desea realizar: \r");
   629     06DD  3020               	movlw	low (STR_1| (0+32768))
   630     06DE  00F1               	movwf	cadena@str
   631     06DF  3088               	movlw	high (STR_1| (0+32768))
   632     06E0  00F2               	movwf	cadena@str+1
   633     06E1  120A  118A  2680  120A  118A  	fcall	_cadena
   634     06E6                     l859:
   635                           
   636                           ;main.c: 69:         cadena(" 1) Desplegar caracter \r");
   637     06E6  3077               	movlw	low (STR_2| (0+32768))
   638     06E7  00F1               	movwf	cadena@str
   639     06E8  3088               	movlw	high (STR_2| (0+32768))
   640     06E9  00F2               	movwf	cadena@str+1
   641     06EA  120A  118A  2680  120A  118A  	fcall	_cadena
   642     06EF                     l861:
   643                           
   644                           ;main.c: 70:         cadena(" 2) Enviar Ascii \r");
   645     06EF  30A5               	movlw	low (STR_3| (0+32768))
   646     06F0  00F1               	movwf	cadena@str
   647     06F1  3088               	movlw	high (STR_3| (0+32768))
   648     06F2  00F2               	movwf	cadena@str+1
   649     06F3  120A  118A  2680  120A  118A  	fcall	_cadena
   650     06F8                     l863:
   651                           
   652                           ;main.c: 71:         cadena(" 3) Mostrar cadena \r");
   653     06F8  3090               	movlw	low (STR_4| (0+32768))
   654     06F9  00F1               	movwf	cadena@str
   655     06FA  3088               	movlw	high (STR_4| (0+32768))
   656     06FB  00F2               	movwf	cadena@str+1
   657     06FC  120A  118A  2680  120A  118A  	fcall	_cadena
   658     0701                     l865:
   659                           
   660                           ;main.c: 72:         cadena(" 4) Mostrar potenciometro \r");
   661     0701  305B               	movlw	low (STR_5| (0+32768))
   662     0702  00F1               	movwf	cadena@str
   663     0703  3088               	movlw	high (STR_5| (0+32768))
   664     0704  00F2               	movwf	cadena@str+1
   665     0705  120A  118A  2680  120A  118A  	fcall	_cadena
   666     070A                     l53:	
   667                           ;main.c: 74:         while(PIR1bits.RCIF == 0);
   668                           
   669     070A  1283               	bcf	3,5	;RP0=0, select bank0
   670     070B  1303               	bcf	3,6	;RP1=0, select bank0
   671     070C  1E8C               	btfss	12,5	;volatile
   672     070D  2F0F               	goto	u81
   673     070E  2F10               	goto	u80
   674     070F                     u81:
   675     070F  2F0A               	goto	l53
   676     0710                     u80:
   677     0710                     l867:
   678                           
   679                           ;main.c: 76:         valor = RCREG;
   680     0710  081A               	movf	26,w	;volatile
   681     0711  00F6               	movwf	_valor
   682                           
   683                           ;main.c: 78:         switch(valor){
   684     0712  2FE1               	goto	l909
   685     0713                     l869:
   686                           
   687                           ;main.c: 80:                 cadena(" Ingrese valor desea mostrar: \r");
   688     0713  3000               	movlw	low (STR_6| (0+32768))
   689     0714  00F1               	movwf	cadena@str
   690     0715  3088               	movlw	high (STR_6| (0+32768))
   691     0716  00F2               	movwf	cadena@str+1
   692     0717  120A  118A  2680  120A  118A  	fcall	_cadena
   693     071C                     l58:	
   694                           ;main.c: 81:                 while(PIR1bits.RCIF == 0);
   695                           
   696     071C  1283               	bcf	3,5	;RP0=0, select bank0
   697     071D  1303               	bcf	3,6	;RP1=0, select bank0
   698     071E  1E8C               	btfss	12,5	;volatile
   699     071F  2F21               	goto	u91
   700     0720  2F22               	goto	u90
   701     0721                     u91:
   702     0721  2F1C               	goto	l58
   703     0722                     u90:
   704     0722                     l871:
   705                           
   706                           ;main.c: 82:                 valor = RCREG;
   707     0722  081A               	movf	26,w	;volatile
   708     0723  00F6               	movwf	_valor
   709                           
   710                           ;main.c: 83:                 switch (valor){
   711     0724  2F7F               	goto	l893
   712     0725                     l873:
   713                           
   714                           ;main.c: 85:                     cadena("\ra");
   715     0725  30F1               	movlw	low (STR_7| (0+32768))
   716     0726  00F1               	movwf	cadena@str
   717     0727  3088               	movlw	high (STR_7| (0+32768))
   718     0728  00F2               	movwf	cadena@str+1
   719     0729  120A  118A  2680  120A  118A  	fcall	_cadena
   720                           
   721                           ;main.c: 86:                     break;
   722     072E  2EDD               	goto	l857
   723     072F                     l875:
   724                           
   725                           ;main.c: 88:                     cadena("\r2");
   726     072F  30D9               	movlw	low (STR_8| (0+32768))
   727     0730  00F1               	movwf	cadena@str
   728     0731  3088               	movlw	high (STR_8| (0+32768))
   729     0732  00F2               	movwf	cadena@str+1
   730     0733  120A  118A  2680  120A  118A  	fcall	_cadena
   731                           
   732                           ;main.c: 89:                     break;
   733     0738  2EDD               	goto	l857
   734     0739                     l877:
   735                           
   736                           ;main.c: 91:                     cadena("\r3");
   737     0739  30DC               	movlw	low (STR_9| (0+32768))
   738     073A  00F1               	movwf	cadena@str
   739     073B  3088               	movlw	high (STR_9| (0+32768))
   740     073C  00F2               	movwf	cadena@str+1
   741     073D  120A  118A  2680  120A  118A  	fcall	_cadena
   742                           
   743                           ;main.c: 92:                     break;
   744     0742  2EDD               	goto	l857
   745     0743                     l879:
   746                           
   747                           ;main.c: 94:                     cadena("\r4");
   748     0743  30DF               	movlw	low (STR_10| (0+32768))
   749     0744  00F1               	movwf	cadena@str
   750     0745  3088               	movlw	high (STR_10| (0+32768))
   751     0746  00F2               	movwf	cadena@str+1
   752     0747  120A  118A  2680  120A  118A  	fcall	_cadena
   753                           
   754                           ;main.c: 95:                     break;
   755     074C  2EDD               	goto	l857
   756     074D                     l881:
   757                           
   758                           ;main.c: 97:                     cadena("\r5");
   759     074D  30E2               	movlw	low (STR_11| (0+32768))
   760     074E  00F1               	movwf	cadena@str
   761     074F  3088               	movlw	high (STR_11| (0+32768))
   762     0750  00F2               	movwf	cadena@str+1
   763     0751  120A  118A  2680  120A  118A  	fcall	_cadena
   764                           
   765                           ;main.c: 98:                     break;
   766     0756  2EDD               	goto	l857
   767     0757                     l883:
   768                           
   769                           ;main.c: 100:                     cadena("\r6");
   770     0757  30E5               	movlw	low (STR_12| (0+32768))
   771     0758  00F1               	movwf	cadena@str
   772     0759  3088               	movlw	high (STR_12| (0+32768))
   773     075A  00F2               	movwf	cadena@str+1
   774     075B  120A  118A  2680  120A  118A  	fcall	_cadena
   775                           
   776                           ;main.c: 101:                     break;
   777     0760  2EDD               	goto	l857
   778     0761                     l885:
   779                           
   780                           ;main.c: 103:                     cadena("\r7");
   781     0761  30E8               	movlw	low (STR_13| (0+32768))
   782     0762  00F1               	movwf	cadena@str
   783     0763  3088               	movlw	high (STR_13| (0+32768))
   784     0764  00F2               	movwf	cadena@str+1
   785     0765  120A  118A  2680  120A  118A  	fcall	_cadena
   786                           
   787                           ;main.c: 104:                     break;
   788     076A  2EDD               	goto	l857
   789     076B                     l887:
   790                           
   791                           ;main.c: 106:                     cadena("\r8");
   792     076B  30EB               	movlw	low (STR_14| (0+32768))
   793     076C  00F1               	movwf	cadena@str
   794     076D  3088               	movlw	high (STR_14| (0+32768))
   795     076E  00F2               	movwf	cadena@str+1
   796     076F  120A  118A  2680  120A  118A  	fcall	_cadena
   797                           
   798                           ;main.c: 107:                     break;
   799     0774  2EDD               	goto	l857
   800     0775                     l889:
   801                           
   802                           ;main.c: 109:                     cadena("\r9");
   803     0775  30EE               	movlw	low (STR_15| (0+32768))
   804     0776  00F1               	movwf	cadena@str
   805     0777  3088               	movlw	high (STR_15| (0+32768))
   806     0778  00F2               	movwf	cadena@str+1
   807     0779  120A  118A  2680  120A  118A  	fcall	_cadena
   808                           
   809                           ;main.c: 110:                     break;
   810     077E  2EDD               	goto	l857
   811     077F                     l893:
   812     077F  0876               	movf	_valor,w
   813     0780  00F3               	movwf	??_main
   814     0781  01F4               	clrf	??_main+1
   815                           
   816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   817                           ; Switch size 1, requested type "simple"
   818                           ; Number of cases is 1, Range of values is 0 to 0
   819                           ; switch strategies available:
   820                           ; Name         Instructions Cycles
   821                           ; simple_byte            4     3 (average)
   822                           ; direct_byte           11     8 (fixed)
   823                           ; jumptable            260     6 (fixed)
   824                           ;	Chosen strategy is simple_byte
   825     0782  0874               	movf	??_main+1,w
   826     0783  3A00               	xorlw	0	; case 0
   827     0784  1903               	skipnz
   828     0785  2F87               	goto	l959
   829     0786  2EDD               	goto	l857
   830     0787                     l959:
   831                           
   832                           ; Switch size 1, requested type "simple"
   833                           ; Number of cases is 9, Range of values is 50 to 97
   834                           ; switch strategies available:
   835                           ; Name         Instructions Cycles
   836                           ; simple_byte           28    15 (average)
   837                           ; direct_byte          155    11 (fixed)
   838                           ; jumptable            263     9 (fixed)
   839                           ;	Chosen strategy is simple_byte
   840     0787  0873               	movf	??_main,w
   841     0788  3A32               	xorlw	50	; case 50
   842     0789  1903               	skipnz
   843     078A  2F2F               	goto	l875
   844     078B  3A01               	xorlw	1	; case 51
   845     078C  1903               	skipnz
   846     078D  2F39               	goto	l877
   847     078E  3A07               	xorlw	7	; case 52
   848     078F  1903               	skipnz
   849     0790  2F43               	goto	l879
   850     0791  3A01               	xorlw	1	; case 53
   851     0792  1903               	skipnz
   852     0793  2F4D               	goto	l881
   853     0794  3A03               	xorlw	3	; case 54
   854     0795  1903               	skipnz
   855     0796  2F57               	goto	l883
   856     0797  3A01               	xorlw	1	; case 55
   857     0798  1903               	skipnz
   858     0799  2F61               	goto	l885
   859     079A  3A0F               	xorlw	15	; case 56
   860     079B  1903               	skipnz
   861     079C  2F6B               	goto	l887
   862     079D  3A01               	xorlw	1	; case 57
   863     079E  1903               	skipnz
   864     079F  2F75               	goto	l889
   865     07A0  3A58               	xorlw	88	; case 97
   866     07A1  1903               	skipnz
   867     07A2  2F25               	goto	l873
   868     07A3  2EDD               	goto	l857
   869     07A4                     l895:
   870                           
   871                           ;main.c: 115:                 cadena(" Enviar Ascii: ");
   872     07A4  30B8               	movlw	low (STR_16| (0+32768))
   873     07A5  00F1               	movwf	cadena@str
   874     07A6  3088               	movlw	high (STR_16| (0+32768))
   875     07A7  00F2               	movwf	cadena@str+1
   876     07A8  120A  118A  2680  120A  118A  	fcall	_cadena
   877     07AD                     l74:	
   878                           ;main.c: 116:                 while(PIR1bits.RCIF == 0);
   879                           
   880     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   881     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   882     07AF  1E8C               	btfss	12,5	;volatile
   883     07B0  2FB2               	goto	u101
   884     07B1  2FB3               	goto	u100
   885     07B2                     u101:
   886     07B2  2FAD               	goto	l74
   887     07B3                     u100:
   888     07B3                     l897:
   889                           
   890                           ;main.c: 117:                 PORTB = RCREG;
   891     07B3  081A               	movf	26,w	;volatile
   892     07B4  0086               	movwf	6	;volatile
   893     07B5                     l899:
   894                           
   895                           ;main.c: 118:                 cadena("\r El valor se ha mostrado \r");
   896     07B5  303F               	movlw	low (STR_17| (0+32768))
   897     07B6  00F1               	movwf	cadena@str
   898     07B7  3088               	movlw	high (STR_17| (0+32768))
   899     07B8  00F2               	movwf	cadena@str+1
   900     07B9  120A  118A  2680  120A  118A  	fcall	_cadena
   901                           
   902                           ;main.c: 119:                 break;
   903     07BE  2EDD               	goto	l857
   904     07BF                     l901:
   905                           
   906                           ;main.c: 122:                 cadena("\r Hola \r");
   907     07BF  30C8               	movlw	low (STR_18| (0+32768))
   908     07C0  00F1               	movwf	cadena@str
   909     07C1  3088               	movlw	high (STR_18| (0+32768))
   910     07C2  00F2               	movwf	cadena@str+1
   911     07C3  120A  118A  2680  120A  118A  	fcall	_cadena
   912                           
   913                           ;main.c: 123:                 break;
   914     07C8  2EDD               	goto	l857
   915     07C9                     l903:
   916                           
   917                           ;main.c: 126:                     if (ADCON0bits.CHS == 0b0000)
   918     07C9  0C1F               	rrf	31,w	;volatile
   919     07CA  00F3               	movwf	??_main
   920     07CB  0C73               	rrf	??_main,w
   921     07CC  390F               	andlw	15
   922     07CD  3A00               	xorlw	0
   923     07CE  1D03               	skipz
   924     07CF  2FD1               	goto	u111
   925     07D0  2FD2               	goto	u110
   926     07D1                     u111:
   927     07D1  2FD4               	goto	l79
   928     07D2                     u110:
   929     07D2                     l905:
   930                           
   931                           ;main.c: 127:                     {;main.c: 128:                         pot = ADRESH;
   932     07D2  081E               	movf	30,w	;volatile
   933     07D3  00F5               	movwf	_pot
   934     07D4                     l79:	
   935                           ;main.c: 129:                     }
   936                           
   937                           
   938                           ;main.c: 130:                 PORTB = pot;
   939     07D4  0875               	movf	_pot,w
   940     07D5  0086               	movwf	6	;volatile
   941                           
   942                           ;main.c: 131:                 break;
   943     07D6  2EDD               	goto	l857
   944     07D7                     l907:
   945                           
   946                           ;main.c: 134:             cadena("error \r");
   947     07D7  30D1               	movlw	low (STR_19| (0+32768))
   948     07D8  00F1               	movwf	cadena@str
   949     07D9  3088               	movlw	high (STR_19| (0+32768))
   950     07DA  00F2               	movwf	cadena@str+1
   951     07DB  120A  118A  2680  120A  118A  	fcall	_cadena
   952                           
   953                           ;main.c: 135:         }
   954     07E0  2EDD               	goto	l857
   955     07E1                     l909:
   956     07E1  0876               	movf	_valor,w
   957     07E2  00F3               	movwf	??_main
   958     07E3  01F4               	clrf	??_main+1
   959                           
   960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   961                           ; Switch size 1, requested type "simple"
   962                           ; Number of cases is 1, Range of values is 0 to 0
   963                           ; switch strategies available:
   964                           ; Name         Instructions Cycles
   965                           ; simple_byte            4     3 (average)
   966                           ; direct_byte           11     8 (fixed)
   967                           ; jumptable            260     6 (fixed)
   968                           ;	Chosen strategy is simple_byte
   969     07E4  0874               	movf	??_main+1,w
   970     07E5  3A00               	xorlw	0	; case 0
   971     07E6  1903               	skipnz
   972     07E7  2FE9               	goto	l961
   973     07E8  2FD7               	goto	l907
   974     07E9                     l961:
   975                           
   976                           ; Switch size 1, requested type "simple"
   977                           ; Number of cases is 4, Range of values is 49 to 52
   978                           ; switch strategies available:
   979                           ; Name         Instructions Cycles
   980                           ; simple_byte           13     7 (average)
   981                           ; direct_byte           23    11 (fixed)
   982                           ; jumptable            263     9 (fixed)
   983                           ;	Chosen strategy is simple_byte
   984     07E9  0873               	movf	??_main,w
   985     07EA  3A31               	xorlw	49	; case 49
   986     07EB  1903               	skipnz
   987     07EC  2F13               	goto	l869
   988     07ED  3A03               	xorlw	3	; case 50
   989     07EE  1903               	skipnz
   990     07EF  2FA4               	goto	l895
   991     07F0  3A01               	xorlw	1	; case 51
   992     07F1  1903               	skipnz
   993     07F2  2FBF               	goto	l901
   994     07F3  3A07               	xorlw	7	; case 52
   995     07F4  1903               	skipnz
   996     07F5  2FC9               	goto	l903
   997     07F6  2FD7               	goto	l907
   998     07F7  120A  118A  2800   	ljmp	start
   999     07FA                     __end_of_main:
  1000                           
  1001                           	psect	text1
  1002     06A6                     __ptext1:	
  1003 ;; *************** function _setup *****************
  1004 ;; Defined at:
  1005 ;;		line 37 in file "main.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;		None
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;		None
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1019 ;;      Params:         0       0       0       0       0
  1020 ;;      Locals:         0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0
  1022 ;;      Totals:         0       0       0       0       0
  1023 ;;Total ram usage:        0 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032     06A6                     _setup:	
  1033                           ;psect for function _setup
  1034                           
  1035     06A6                     l691:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _setup: [wreg+status,2+status,0]
  1038                           
  1039                           
  1040                           ;main.c: 38:     ANSEL = 0b00000001;
  1041     06A6  3001               	movlw	1
  1042     06A7  1683               	bsf	3,5	;RP0=1, select bank3
  1043     06A8  1703               	bsf	3,6	;RP1=1, select bank3
  1044     06A9  0088               	movwf	8	;volatile
  1045     06AA                     l693:
  1046                           
  1047                           ;main.c: 39:     ANSELH = 0;
  1048     06AA  0189               	clrf	9	;volatile
  1049     06AB                     l695:
  1050                           
  1051                           ;main.c: 40:     TRISA = 0b00000001;
  1052     06AB  3001               	movlw	1
  1053     06AC  1683               	bsf	3,5	;RP0=1, select bank1
  1054     06AD  1303               	bcf	3,6	;RP1=0, select bank1
  1055     06AE  0085               	movwf	5	;volatile
  1056                           
  1057                           ;main.c: 41:     TRISB = 0;
  1058     06AF  0186               	clrf	6	;volatile
  1059                           
  1060                           ;main.c: 42:     PORTA = 0;
  1061     06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1062     06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1063     06B2  0185               	clrf	5	;volatile
  1064                           
  1065                           ;main.c: 43:     PORTB = 0;
  1066     06B3  0186               	clrf	6	;volatile
  1067     06B4                     l697:
  1068                           
  1069                           ;main.c: 44:     OSCCONbits.IRCF = 0b111 ;
  1070     06B4  3070               	movlw	112
  1071     06B5  1683               	bsf	3,5	;RP0=1, select bank1
  1072     06B6  1303               	bcf	3,6	;RP1=0, select bank1
  1073     06B7  048F               	iorwf	15,f	;volatile
  1074     06B8                     l699:
  1075                           
  1076                           ;main.c: 45:     OSCCONbits.SCS = 1;
  1077     06B8  140F               	bsf	15,0	;volatile
  1078     06B9                     l701:
  1079                           
  1080                           ;main.c: 46:     TXSTAbits.SYNC = 0;
  1081     06B9  1218               	bcf	24,4	;volatile
  1082     06BA                     l703:
  1083                           
  1084                           ;main.c: 47:     TXSTAbits.BRGH = 1;
  1085     06BA  1518               	bsf	24,2	;volatile
  1086     06BB                     l705:
  1087                           
  1088                           ;main.c: 48:     BAUDCTLbits.BRG16 = 1;
  1089     06BB  1683               	bsf	3,5	;RP0=1, select bank3
  1090     06BC  1703               	bsf	3,6	;RP1=1, select bank3
  1091     06BD  1587               	bsf	7,3	;volatile
  1092     06BE                     l707:
  1093                           
  1094                           ;main.c: 49:     SPBRG = 207;
  1095     06BE  30CF               	movlw	207
  1096     06BF  1683               	bsf	3,5	;RP0=1, select bank1
  1097     06C0  1303               	bcf	3,6	;RP1=0, select bank1
  1098     06C1  0099               	movwf	25	;volatile
  1099     06C2                     l709:
  1100                           
  1101                           ;main.c: 50:     SPBRGH = 0;
  1102     06C2  019A               	clrf	26	;volatile
  1103     06C3                     l711:
  1104                           
  1105                           ;main.c: 51:     RCSTAbits.SPEN = 1;
  1106     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  1107     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  1108     06C5  1798               	bsf	24,7	;volatile
  1109     06C6                     l713:
  1110                           
  1111                           ;main.c: 52:     RCSTAbits.RX9 = 0;
  1112     06C6  1318               	bcf	24,6	;volatile
  1113     06C7                     l715:
  1114                           
  1115                           ;main.c: 53:     RCSTAbits.CREN = 1;
  1116     06C7  1618               	bsf	24,4	;volatile
  1117     06C8                     l717:
  1118                           
  1119                           ;main.c: 54:     TXSTAbits.TXEN = 1;
  1120     06C8  1683               	bsf	3,5	;RP0=1, select bank1
  1121     06C9  1303               	bcf	3,6	;RP1=0, select bank1
  1122     06CA  1698               	bsf	24,5	;volatile
  1123     06CB                     l719:
  1124                           
  1125                           ;main.c: 55:     ADCON1bits.VCFG0 = 0;
  1126     06CB  121F               	bcf	31,4	;volatile
  1127     06CC                     l721:
  1128                           
  1129                           ;main.c: 56:     ADCON1bits.VCFG1 = 0;
  1130     06CC  129F               	bcf	31,5	;volatile
  1131     06CD                     l723:
  1132                           
  1133                           ;main.c: 57:     ADCON1bits.ADFM = 0;
  1134     06CD  139F               	bcf	31,7	;volatile
  1135     06CE                     l725:
  1136                           
  1137                           ;main.c: 58:     PIE1bits.ADIE = 1;
  1138     06CE  170C               	bsf	12,6	;volatile
  1139     06CF                     l727:
  1140                           
  1141                           ;main.c: 59:     PIR1bits.ADIF = 0;
  1142     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1143     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1144     06D1  130C               	bcf	12,6	;volatile
  1145     06D2                     l729:
  1146                           
  1147                           ;main.c: 60:     ADCON0bits.ADCS = 0b00;
  1148     06D2  303F               	movlw	-193
  1149     06D3  059F               	andwf	31,f	;volatile
  1150     06D4                     l731:
  1151                           
  1152                           ;main.c: 61:     ADCON0bits.CHS = 0b0000;
  1153     06D4  30C3               	movlw	-61
  1154     06D5  059F               	andwf	31,f	;volatile
  1155     06D6                     l733:
  1156                           
  1157                           ;main.c: 62:     ADCON0bits.ADON = 1;
  1158     06D6  141F               	bsf	31,0	;volatile
  1159     06D7                     l47:
  1160     06D7  0008               	return
  1161     06D8                     __end_of_setup:
  1162                           
  1163                           	psect	text2
  1164     0680                     __ptext2:	
  1165 ;; *************** function _cadena *****************
  1166 ;; Defined at:
  1167 ;;		line 144 in file "main.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  str             2    1[COMMON] PTR unsigned char 
  1170 ;;		 -> STR_19(8), STR_18(9), STR_17(28), STR_16(16), 
  1171 ;;		 -> STR_15(3), STR_14(3), STR_13(3), STR_12(3), 
  1172 ;;		 -> STR_11(3), STR_10(3), STR_9(3), STR_8(3), 
  1173 ;;		 -> STR_7(3), STR_6(32), STR_5(28), STR_4(21), 
  1174 ;;		 -> STR_3(19), STR_2(25), STR_1(31), 
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  1    wreg      void 
  1179 ;; Registers used:
  1180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1186 ;;      Params:         2       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0
  1189 ;;      Totals:         2       0       0       0       0
  1190 ;;Total ram usage:        2 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 1
  1193 ;; This function calls:
  1194 ;;		_texto
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200     0680                     _cadena:	
  1201                           ;psect for function _cadena
  1202                           
  1203     0680                     l847:	
  1204                           ;incstack = 0
  1205                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1206                           
  1207                           
  1208                           ;main.c: 145:         while(*str != '\0'){
  1209     0680  2E95               	goto	l853
  1210     0681                     l849:
  1211                           
  1212                           ;main.c: 146:             texto(*str);
  1213     0681  0872               	movf	cadena@str+1,w
  1214     0682  00FF               	movwf	btemp+1
  1215     0683  0871               	movf	cadena@str,w
  1216     0684  0084               	movwf	4
  1217     0685  120A  118A  2003  120A  118A  	fcall	stringtab
  1218     068A  120A  118A  2674  120A  118A  	fcall	_texto
  1219     068F                     l851:
  1220                           
  1221                           ;main.c: 147:             str++;
  1222     068F  3001               	movlw	1
  1223     0690  07F1               	addwf	cadena@str,f
  1224     0691  1803               	skipnc
  1225     0692  0AF2               	incf	cadena@str+1,f
  1226     0693  3000               	movlw	0
  1227     0694  07F2               	addwf	cadena@str+1,f
  1228     0695                     l853:
  1229                           
  1230                           ;main.c: 145:         while(*str != '\0'){
  1231     0695  0872               	movf	cadena@str+1,w
  1232     0696  1283               	bcf	3,5	;RP0=0, select bank0
  1233     0697  1303               	bcf	3,6	;RP1=0, select bank0
  1234     0698  00FF               	movwf	btemp+1
  1235     0699  0871               	movf	cadena@str,w
  1236     069A  0084               	movwf	4
  1237     069B  120A  118A  2003  120A  118A  	fcall	stringtab
  1238     06A0  3A00               	xorlw	0
  1239     06A1  1D03               	skipz
  1240     06A2  2EA4               	goto	u71
  1241     06A3  2EA5               	goto	u70
  1242     06A4                     u71:
  1243     06A4  2E81               	goto	l849
  1244     06A5                     u70:
  1245     06A5                     l95:
  1246     06A5  0008               	return
  1247     06A6                     __end_of_cadena:
  1248                           
  1249                           	psect	text3
  1250     0674                     __ptext3:	
  1251 ;; *************** function _texto *****************
  1252 ;; Defined at:
  1253 ;;		line 139 in file "main.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  data            1    wreg     unsigned char 
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  data            1    0[COMMON] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         1       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         1       0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_cadena
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280     0674                     _texto:	
  1281                           ;psect for function _texto
  1282                           
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _texto: [wreg]
  1286                           ;texto@data stored from wreg
  1287     0674  00F0               	movwf	texto@data
  1288     0675                     l687:
  1289     0675                     l86:	
  1290                           ;main.c: 140:         while(TXSTAbits.TRMT == 0);
  1291                           
  1292     0675  1683               	bsf	3,5	;RP0=1, select bank1
  1293     0676  1303               	bcf	3,6	;RP1=0, select bank1
  1294     0677  1C98               	btfss	24,1	;volatile
  1295     0678  2E7A               	goto	u11
  1296     0679  2E7B               	goto	u10
  1297     067A                     u11:
  1298     067A  2E75               	goto	l86
  1299     067B                     u10:
  1300     067B                     l689:
  1301                           
  1302                           ;main.c: 141:         TXREG = data;
  1303     067B  0870               	movf	texto@data,w
  1304     067C  1283               	bcf	3,5	;RP0=0, select bank0
  1305     067D  1303               	bcf	3,6	;RP1=0, select bank0
  1306     067E  0099               	movwf	25	;volatile
  1307     067F                     l89:
  1308     067F  0008               	return
  1309     0680                     __end_of_texto:
  1310     007E                     btemp	set	126	;btemp
  1311     007E                     wtemp0	set	126
  1312                           
  1313                           	psect	idloc
  1314                           
  1315                           ;Config register IDLOC0 @ 0x2000
  1316                           ;	unspecified, using default values
  1317     2000                     	org	8192
  1318     2000  3FFF               	dw	16383
  1319                           
  1320                           ;Config register IDLOC1 @ 0x2001
  1321                           ;	unspecified, using default values
  1322     2001                     	org	8193
  1323     2001  3FFF               	dw	16383
  1324                           
  1325                           ;Config register IDLOC2 @ 0x2002
  1326                           ;	unspecified, using default values
  1327     2002                     	org	8194
  1328     2002  3FFF               	dw	16383
  1329                           
  1330                           ;Config register IDLOC3 @ 0x2003
  1331                           ;	unspecified, using default values
  1332     2003                     	org	8195
  1333     2003  3FFF               	dw	16383
  1334                           
  1335                           	psect	config
  1336                           
  1337                           ;Config register CONFIG1 @ 0x2007
  1338                           ;	Oscillator Selection bits
  1339                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1340                           ;	Watchdog Timer Enable bit
  1341                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1342                           ;	Power-up Timer Enable bit
  1343                           ;	PWRTE = OFF, PWRT disabled
  1344                           ;	RE3/MCLR pin function select bit
  1345                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1346                           ;	Code Protection bit
  1347                           ;	CP = OFF, Program memory code protection is disabled
  1348                           ;	Data Code Protection bit
  1349                           ;	CPD = OFF, Data memory code protection is disabled
  1350                           ;	Brown Out Reset Selection bits
  1351                           ;	BOREN = OFF, BOR disabled
  1352                           ;	Internal External Switchover bit
  1353                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1354                           ;	Fail-Safe Clock Monitor Enabled bit
  1355                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  1356                           ;	Low Voltage Programming Enable bit
  1357                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
  1358                           ;	In-Circuit Debugger Mode bit
  1359                           ;	DEBUG = 0x1, unprogrammed default
  1360     2007                     	org	8199
  1361     2007  38D4               	dw	14548
  1362                           
  1363                           ;Config register CONFIG2 @ 0x2008
  1364                           ;	Brown-out Reset Selection bit
  1365                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1366                           ;	Flash Program Memory Self Write Enable bits
  1367                           ;	WRT = OFF, Write protection off
  1368     2008                     	org	8200
  1369     2008  3FFF               	dw	16383

Data Sizes:
    Strings     244
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    cadena@str	PTR unsigned char  size(2) Largest target is 32
		 -> STR_19(CODE[8]), STR_18(CODE[9]), STR_17(CODE[28]), STR_16(CODE[16]), 
		 -> STR_15(CODE[3]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), 
		 -> STR_7(CODE[3]), STR_6(CODE[32]), STR_5(CODE[28]), STR_4(CODE[21]), 
		 -> STR_3(CODE[19]), STR_2(CODE[25]), STR_1(CODE[31]), 


Critical Paths under _main in COMMON

    _main->_cadena
    _cadena->_texto

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1504
                                              3 COMMON     2     2      0
                             _cadena
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               2     0      2    1504
                                              1 COMMON     2     0      2
                              _texto
 ---------------------------------------------------------------------------------
 (2) _texto                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
     _texto
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Apr 20 12:43:25 2023

                      pc 0002                       l53 070A                       l47 06D7  
                     l74 07AD                       l58 071C                       l86 0675  
                     l95 06A5                       l79 07D4                       l89 067F  
                     u10 067B                       u11 067A                       u70 06A5  
                     u71 06A4                       u80 0710                       u81 070F  
                     u90 0722                       u91 0721                       fsr 0004  
                    l701 06B9                      l711 06C3                      l703 06BA  
                    l721 06CC                      l713 06C6                      l705 06BB  
                    l731 06D4                      l723 06CD                      l715 06C7  
                    l707 06BE                      l733 06D6                      l725 06CE  
                    l717 06C8                      l709 06C2                      l901 07BF  
                    l727 06CF                      l719 06CB                      l903 07C9  
                    l729 06D2                      l905 07D2                      l851 068F  
                    l691 06A6                      l907 07D7                      l853 0695  
                    l693 06AA                      l909 07E1                      l861 06EF  
                    l687 0675                      l847 0680                      l695 06AB  
                    l871 0722                      l863 06F8                      l855 06D8  
                    l689 067B                      l849 0681                      l697 06B4  
                    l961 07E9                      l881 074D                      l873 0725  
                    l865 0701                      l857 06DD                      l699 06B8  
                    l883 0757                      l875 072F                      l867 0710  
                    l859 06E6                      l885 0761                      l877 0739  
                    l893 077F                      l869 0713                      l895 07A4  
                    l959 0787                      l887 076B                      l879 0743  
                    l897 07B3                      l889 0775                      l899 07B5  
                    u100 07B3                      u101 07B2                      u110 07D2  
                    u111 07D1                      _pot 0075                      fsr0 0004  
                    indf 0000                     STR_1 0820                     STR_2 0877  
                   STR_3 08A5                     STR_4 0890                     STR_5 085B  
                   STR_6 0800                     STR_7 08F1                     STR_8 08D9  
                   STR_9 08DC                     _main 06D8                     btemp 007E  
                   start 0000                    ?_main 0070                    STR_10 08DF  
                  STR_11 08E2                    STR_12 08E5                    STR_13 08E8  
                  STR_14 08EB                    STR_15 08EE                    STR_16 08B8  
                  STR_17 083F                    STR_18 08C8                    STR_19 08D1  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _valor 0076  
                  _setup 06A6                    _texto 0674                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FA  
           __end_of_main 07FA                   ??_main 0073                   _ADRESH 001E  
                 ?_setup 0070                   ?_texto 0070                   _ANSELH 0189  
                 _SPBRGH 009A                   _cadena 0680  __end_of__initialization 07FC  
         __pcstackCOMMON 0070            __end_of_setup 06D8            __end_of_texto 0680  
                ??_setup 0070                  ??_texto 0070               __pmaintext 06D8  
                ?_cadena 0071               __stringtab 0003                  __ptext1 06A6  
                __ptext2 0680                  __ptext3 0674     end_of_initialization 07FC  
              _RCSTAbits 0018             __pstringtext 0800                _TXSTAbits 0098  
         __end_of_cadena 06A6              _BAUDCTLbits 0187      start_initialization 07FA  
               ??_cadena 0073              __pbssCOMMON 0075                ___latbits 0002  
              cadena@str 0071                __pstrings 0003                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F              __stringbase 0015  
             _ADCON1bits 009F       __end_of__stringtab 0015                texto@data 0070  
              stringcode 000D               _OSCCONbits 008F                 stringtab 0003  
